plugins {
    id 'fabric-loom' version '1.6-SNAPSHOT'
    id 'maven-publish'
}
apply from: 'versioning.gradle'

version = getCurrentVersion()
group = project.maven_group

repositories {
    maven {
        url "https://squiddev.cc/maven/"
        content {
            includeGroup("cc.tweaked")
        }
    }
    maven { url "https://maven.wispforest.io" }
}

dependencies {
    implementation 'org.jetbrains:annotations:23.0.0'
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // CC: Tweaked
    modCompileOnly("cc.tweaked:cc-tweaked-${project.minecraft_version}-fabric-api:${project.cc_version}")
    modRuntimeOnly("cc.tweaked:cc-tweaked-${project.minecraft_version}-fabric:${project.cc_version}")

    // Adventures in Time
    modImplementation files("libs/ait.jar")

    // owolib
    modImplementation "io.wispforest:owo-lib:${project.owo_version}"
    annotationProcessor "io.wispforest:owo-lib:${project.owo_version}"
    include "io.wispforest:owo-sentinel:${project.owo_version}"
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    // withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {

    }
}

sourceSets {
    main {
        resources {
            srcDirs += [
                    'src/main/generated'
            ]
        }
    }
}

fabricApi {
    configureDataGeneration()
}

loom {
    runs {
        datagen {
            inherit client
        }
    }
}

configurations.all {
    resolutionStrategy.cacheDynamicVersionsFor 10, 'minutes'
}